{"version":3,"sources":["App/components/404.jsx","App/utils/index.js","App/services/mappers.js","App/store/postsSlice.js","App/services/index.js","App/store/favouritesSlice.js","App/components/Post.jsx","App/components/ToggleButtons.jsx","App/components/Posts.jsx","App/App.jsx","theme.js","App/store/index.js","index.jsx"],"names":["Base","styled","div","Message","Typography","attrs","variant","Wrapper","StyledButton","Button","props","theme","palette","primary","main","background","hover","ErrorPage","history","useHistory","onClick","push","URL","mapPosts","response","map","post","id","image","author","firstName","owner","lastName","avatar","picture","text","publishDate","Date","toLocaleDateString","postsSlice","createSlice","name","initialState","reducers","setPosts","state","payload","removePost","filter","actions","getPosts","dispatch","setLoading","a","fetch","headers","process","json","result","data","console","error","deletePost","method","favouritesSlice","addFavourites","removeFavourites","favouriteId","Card","sx","letterSpacing","StyledTypography","Post","isFavourite","useDispatch","useState","loading","CardHeader","Avatar","alt","src","title","subheader","CardMedia","component","height","CardContent","CardActions","disableSpacing","IconButton","Checkbox","icon","FavoriteBorder","style","color","checkedIcon","Favorite","disabled","HighlightOffOutlined","ToggleButtons","value","setValue","Box","display","alignItems","justifyContent","Tabs","onChange","event","newValue","Tab","label","padding","PostsWrapper","Grid","maxWidth","spacing","EmptyMessage","LoadingBar","Posts","useEffect","posts","useSelector","favouritesIds","favourites","indexOf","activePosts","type","container","length","item","App","exact","path","createTheme","secondary","default","paper","typography","fontFamily","h1","fontSize","fontWeight","lineHeight","components","MuiGrid","styleOverrides","root","margin","store","configureStore","reducer","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.e1637d80.chunk.js","sourcesContent":["import { Button, Typography } from '@mui/material';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Base = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst Message = styled(Typography).attrs({\n  variant: 'h1',\n})``;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledButton = styled(Button)`\n  &.css-dejen1-MuiButtonBase-root-MuiButton-root {\n    font-weight: 700;\n    margin-top: 24px;\n    color: #000;\n    background: ${props => props.theme.palette.primary.main};\n\n    &:hover {\n      background: ${props => props.theme.palette.background.hover};\n    }\n  }\n`;\n\nconst ErrorPage = () => {\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push('/');\n  };\n\n  return (\n    <Base>\n      <Wrapper>\n        <Message>This page does not seem to exist</Message>\n        <StyledButton onClick={handleClick}>Go back</StyledButton>\n      </Wrapper>\n    </Base>\n  );\n};\n\nexport default ErrorPage;\n","export const URL = 'https://dummyapi.io/data/v1/';\n","export const mapPosts = response =>\n  response.map(post => ({\n    id: post.id,\n    image: post.image,\n    author: {\n      firstName: post.owner.firstName,\n      lastName: post.owner.lastName,\n      avatar: post.owner.picture,\n    },\n    text: post.text,\n    publishDate: new Date(post.publishDate).toLocaleDateString(),\n  }));\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState: [],\n  reducers: {\n    setPosts: (state, { payload }) => (state = payload),\n\n    removePost: (state, { payload }) => state.filter(post => post.id !== payload),\n  },\n});\n\nexport const { setPosts, removePost } = postsSlice.actions;\n\nexport default postsSlice.reducer;\n","import { URL } from '../utils';\nimport { mapPosts } from './mappers';\nimport { removePost, setPosts } from '../store/postsSlice';\n\nexport const getPosts = async (dispatch, setLoading) => {\n  try {\n    const response = await fetch(`${URL}post?limit=9`, {\n      headers: {\n        'app-id': process.env.REACT_APP_API_ID,\n      },\n    });\n    const result = await response.json();\n    dispatch(setPosts(mapPosts(result.data)));\n    setLoading(false);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const deletePost = async (id, dispatch) => {\n  try {\n    const response = await fetch(`${URL}post/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'app-id': `${process.env.REACT_APP_API_ID}`,\n      },\n    });\n    const result = await response.json();\n    dispatch(removePost(result.id));\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const favouritesSlice = createSlice({\n  name: 'favourites',\n  initialState: [],\n  reducers: {\n    addFavourites: (state, { payload }) => {\n      state.push(payload);\n    },\n    removeFavourites: (state, { payload }) => state.filter(favouriteId => favouriteId !== payload),\n  },\n});\n\nexport const { addFavourites, removeFavourites } = favouritesSlice.actions;\n\nexport default favouritesSlice.reducer;\n","import React, { useState } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Avatar,\n  IconButton,\n  Typography,\n  Checkbox,\n} from '@mui/material';\n\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { Favorite, FavoriteBorder, HighlightOffOutlined } from '@mui/icons-material';\nimport PropTypes from 'prop-types';\nimport { removeFavourites, addFavourites } from '../store/favouritesSlice';\nimport { deletePost } from '../services';\n\nconst Base = styled(Card).attrs({ sx: { letterSpacing: 2 } })`\n  width: 345px;\n  min-height: 420px;\n  border-radius: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst StyledTypography = styled(Typography)`\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: auto;\n  text-overflow: ellipsis;\n  display: block;\n  display: -webkit-box;\n`;\n\nconst Post = ({ id, image, author, text, publishDate, isFavourite }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  const handleFavourites = () => {\n    if (!isFavourite) {\n      dispatch(addFavourites(id));\n    } else dispatch(removeFavourites(id));\n  };\n\n  const handleDelete = () => {\n    (async () => {\n      deletePost(id, dispatch);\n    })();\n    setLoading(true);\n  };\n\n  return (\n    <Base>\n      <CardHeader\n        avatar={<Avatar alt={author.firstName} src={author.avatar} />}\n        title={`${author.firstName} ${author.lastName}`}\n        subheader={publishDate}\n      />\n      <CardMedia component=\"img\" height=\"194\" image={image} alt={text} />\n      <CardContent>\n        <StyledTypography>{text}</StyledTypography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton onClick={handleFavourites}>\n          <Checkbox\n            icon={<FavoriteBorder style={{ color: '#fff' }} />}\n            checkedIcon={<Favorite />}\n          />\n        </IconButton>\n        <IconButton disabled={loading} onClick={handleDelete}>\n          <HighlightOffOutlined color=\"secondary\" />\n        </IconButton>\n      </CardActions>\n    </Base>\n  );\n};\n\nPost.propTypes = {\n  id: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  publishDate: PropTypes.string.isRequired,\n  isFavourite: PropTypes.bool.isRequired,\n  author: PropTypes.oneOfType([PropTypes.object]).isRequired,\n};\n\nexport default Post;\n","import * as React from 'react';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport PropTypes from 'prop-types';\n\nconst ToggleButtons = ({ value, setValue }) => {\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <Tabs value={value} onChange={handleChange}>\n        <Tab label=\"All posts\" />\n        <Tab label=\"Favourite posts\" />\n      </Tabs>\n    </Box>\n  );\n};\n\nToggleButtons.propTypes = {\n  value: PropTypes.number.isRequired,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default ToggleButtons;\n","/* eslint-disable no-nested-ternary */\nimport { Box, Grid, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport ReactLoading from 'react-loading';\nimport { getPosts } from '../services';\nimport Post from './Post';\nimport ToggleButtons from './ToggleButtons';\n\nconst Base = styled(Box).attrs({\n  padding: '8px',\n})`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst PostsWrapper = styled(Grid).attrs({\n  maxWidth: 'lg',\n  spacing: 5,\n})``;\n\nconst EmptyMessage = styled(Typography).attrs({\n  variant: 'h1',\n})`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst LoadingBar = styled.div`\n  display: grid;\n  justify-content: center;\n  margin-top: 10px;\n`;\n\nconst Posts = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      getPosts(dispatch, setLoading);\n    })();\n  }, []);\n\n  const posts = useSelector(state => state.posts);\n  const favouritesIds = useSelector(state => state.favourites);\n\n  const favourites = posts.filter(post => favouritesIds.indexOf(post.id) >= 0);\n\n  const activePosts = value === 0 ? posts : favourites;\n\n  if (loading) {\n    return (\n      <LoadingBar>\n        <ReactLoading type=\"bubbles\" color=\"#fff\" />\n      </LoadingBar>\n    );\n  }\n  return (\n    <Base>\n      <ToggleButtons value={value} setValue={setValue} />\n      <PostsWrapper container>\n        {favourites.length === 0 && value === 1 ? (\n          <EmptyMessage>Favourite list is empty</EmptyMessage>\n        ) : posts.length === 0 && value === 0 ? (\n          <EmptyMessage>You do not have any posts</EmptyMessage>\n        ) : (\n          activePosts.map(post => (\n            <Grid key={post.id} item>\n              <Post isFavourite={favouritesIds.indexOf(post.id) >= 0} {...post} />\n            </Grid>\n          ))\n        )}\n      </PostsWrapper>\n    </Base>\n  );\n};\n\nexport default Posts;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport ErrorPage from './components/404';\nimport Posts from './components/Posts';\n\nconst Base = styled.div``;\n\nconst App = () => (\n  <Base>\n    <Switch>\n      <Route exact path=\"/\">\n        <Posts />\n      </Route>\n      <Route path=\"*\">\n        <ErrorPage />\n      </Route>\n    </Switch>\n  </Base>\n);\n\nexport default App;\n","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: '#FFF59D',\n    },\n    secondary: {\n      main: '#fff',\n    },\n    type: 'dark',\n    background: {\n      default: '#191A1C',\n      paper: '#2f3237',\n      hover: '#fff6aa',\n    },\n    text: {\n      primary: '#ffffff',\n      secondary: '#00000',\n    },\n  },\n  typography: {\n    fontFamily: '\"Montserrat\", \"Open Sans\"',\n    h1: {\n      fontSize: 24,\n      fontWeight: 700,\n      lineHeight: 1.54,\n    },\n  },\n  components: {\n    MuiGrid: {\n      styleOverrides: {\n        root: {\n          margin: 0,\n        },\n      },\n    },\n  },\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport posts from './postsSlice';\nimport favourites from './favouritesSlice';\n\nexport const store = configureStore({\n  reducer: {\n    posts,\n    favourites,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { CssBaseline } from '@mui/material';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App/App';\nimport { theme } from './theme';\nimport { store } from './App/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <StyledThemeProvider theme={theme}>\n            <CssBaseline />\n            <App />\n          </StyledThemeProvider>\n        </ThemeProvider>\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}